{ 0  ---> 11}
PERIOD=0;  {一分钟,}
.........
PERIOD=5;  {日}
PERIOD=6;  {周}


# MACD
SHORT:=12;
LONG:=26;
MID:=9;
DIF:EMA(CLOSE,SHORT)-EMA(CLOSE,LONG);
DEA:EMA(DIF,MID);
MACD:(DIF-DEA)*2,COLORSTICK;

MACD_SHIFT1:=REF(MACD,1);

ZERO:=0,DOTLINE;

PERCENT:=IF(PERIOD=5, 0.005, IF(PERIOD=6, 0.015, IF(PERIOD=3, 0.0025, IF(PERIOD=1, 0.0005, 0.00025))));
POINT_DIF:=IF((ABS(DIF)/CLOSE < PERCENT) AND (ABS(DEA)/CLOSE < PERCENT), DIF, DRAWNULL);
POINT_DEA:=IF((ABS(DIF)/CLOSE < PERCENT) AND (ABS(DEA)/CLOSE < PERCENT), DEA, DRAWNULL);

POINT_DIF_P:=IF(POINT_DIF > ZERO, POINT_DIF, DRAWNULL);
POINT_DIF_M:=IF(POINT_DIF <= ZERO, POINT_DIF, DRAWNULL);
POINT_DEA_P:=IF(POINT_DEA > ZERO, POINT_DEA, DRAWNULL);
POINT_DEA_M:=IF(POINT_DEA <= ZERO, POINT_DEA, DRAWNULL);

EMA26:=EMA(C,26);
EMA_:=EMA26-REF(EMA26,1);
SLOPE_:=SLOPE(MACD,2);
{
DYN_SYS1:IF(EMA_>0 AND SLOPE_>0, ZERO, DRAWNULL),COLORGREEN,LINETHICK2;
DYN_SYS2:IF(EMA_<0 AND SLOPE_<0, ZERO, DRAWNULL),COLORRED,LINETHICK2;
}

DYN_SYS3:=IF(EMA_<0, MACD, DRAWNULL);
DYN_SYS4:=IF(EMA_<0 AND SLOPE_<0, MACD, DRAWNULL);
DRAWBAND(DYN_SYS3,  RGB(255,128,128),ZERO,RGB(255,128,128));
DRAWBAND(DYN_SYS4,  RGB(128,0,255),ZERO,RGB(128,0,255));

DRAWBAND(POINT_DIF_P,  RGB(0,255,0),ZERO,RGB(0,255,0));
DRAWBAND(POINT_DEA_P,RGB(0,255,0),ZERO,RGB(0,255,0));

DRAWBAND(POINT_DIF_M,  RGB(255,255,0),ZERO,RGB(255,255,0));
DRAWBAND(POINT_DEA_M,RGB(255,255,0),ZERO,RGB(255,255,0));


# TRIX
N:=12;
M:=9;
MTR:=EMA(EMA(EMA(CLOSE,N),N),N);
TRIX:(MTR-REF(MTR,1))/REF(MTR,1)*100;
MATRIX:MA(TRIX,M);

ZERO:0,DOTLINE;

AD:= IF (TRIX <= 0, TRIX, DRAWNULL);
DRAWBAND(AD,RGB(255,128,128),ZERO,RGB(255,128,128));

BB_:= IF (MATRIX <= 0, MATRIX, DRAWNULL);
DRAWBAND(BB_,RGB(128,0,255),ZERO,RGB(128,0,255));

PERCENT:=IF(PERIOD=5, 0.05, IF(PERIOD=6, 0.25, IF(PERIOD=3, 0.025, IF(PERIOD=1, 0.005, 0.0025))));
POINT_TRIX  :=IF((ABS(TRIX) < PERCENT) AND (ABS(MATRIX) < PERCENT), TRIX, DRAWNULL);
POINT_MATRIX:=IF((ABS(TRIX) < PERCENT) AND (ABS(MATRIX) < PERCENT), MATRIX, DRAWNULL);

POINT_TRIX_P:=IF(POINT_TRIX > ZERO, POINT_TRIX, DRAWNULL);
POINT_TRIX_M:=IF(POINT_TRIX <= ZERO, POINT_TRIX, DRAWNULL);
POINT_MATRIX_P:=IF(POINT_MATRIX > ZERO, POINT_MATRIX, DRAWNULL);
POINT_MATRIX_M:=IF(POINT_MATRIX <= ZERO, POINT_MATRIX, DRAWNULL);

SLOPE_:4*SLOPE(TRIX,2),COLORYELLOW;
IF(SLOPE_>0,SLOPE_,DRAWNULL),COLOR808000;
DYN_SYS1:IF(TRIX>0 AND SLOPE_>0, ZERO, DRAWNULL),COLORGREEN,LINETHICK2;
DYN_SYS2:IF(TRIX<0 AND SLOPE_<0, ZERO, DRAWNULL),COLORRED,LINETHICK2;

DRAWBAND(POINT_TRIX_P,  RGB(0,255,0),ZERO,RGB(0,255,0));
DRAWBAND(POINT_MATRIX_P,RGB(0,255,0),ZERO,RGB(0,255,0));

DRAWBAND(POINT_TRIX_M,  RGB(255,255,0),ZERO,RGB(255,255,0));
DRAWBAND(POINT_MATRIX_M,RGB(255,255,0),ZERO,RGB(255,255,0));

{DRAWBAND(POINT_TRIX,  RGB(255,128,0),ZERO,RGB(255,128,0));}  {ORANGE, 不醒目}
{DRAWBAND(POINT_MATRIX,RGB(255,128,0),ZERO,RGB(255,128,0));}
{DRAWBAND(POINT_MATRIX,RGB(255,255,0),ZERO,RGB(255,255,0));}  {YELLOW}
{DRAWBAND(POINT_TRIX,  RGB(255,255,0),ZERO,RGB(255,255,0));}
{DRAWBAND(POINT_TRIX,  RGB(0,255,0),ZERO,RGB(0,255,0));}  {GREEN}
{DRAWBAND(POINT_MATRIX,RGB(0,255,0),ZERO,RGB(0,255,0));}
{DRAWBAND(POINT_TRIX,  RGB(0,0,255),ZERO,RGB(0,0,255));}  {BLUE}
{DRAWBAND(POINT_MATRIX,RGB(0,0,255),ZERO,RGB(0,0,255));}


# DMA
N1:=10;
N2:=50;
M:=10;
DIF:MA(CLOSE,N1)-MA(CLOSE,N2);
DIFMA:MA(DIF,M);
ZERO:0,DOTLINE;

AD:= IF (DIF<= 0, DIF, DRAWNULL);
DRAWBAND(AD,RGB(255,128,128),ZERO,RGB(255,128,128));

BB_:= IF (DIFMA <= 0, DIFMA, DRAWNULL);
DRAWBAND(BB_,RGB(128,0,255),ZERO,RGB(128,0,255));

PERCENT:=IF(PERIOD=5, 0.01, IF(PERIOD=6, 0.03, IF(PERIOD=3, 0.005, IF(PERIOD=1, 0.001, 0.0005))));
POINT_DIF:=IF((ABS(DIF)/CLOSE < PERCENT) AND (ABS(DIFMA)/CLOSE < PERCENT), DIF, DRAWNULL);
POINT_DIFMA:=IF((ABS(DIF)/CLOSE < PERCENT) AND (ABS(DIFMA)/CLOSE < PERCENT), DIFMA, DRAWNULL);

POINT_DIF_P:=IF(POINT_DIF > ZERO, POINT_DIF, DRAWNULL);
POINT_DIF_M:=IF(POINT_DIF <= ZERO, POINT_DIF, DRAWNULL);
POINT_DIFMA_P:=IF(POINT_DIFMA > ZERO, POINT_DIFMA, DRAWNULL);
POINT_DIFMA_M:=IF(POINT_DIFMA <= ZERO, POINT_DIFMA, DRAWNULL);

SLOPE_:4*SLOPE(DIF,2),COLORYELLOW;
DYN_SYS1:IF(DIF>0 AND SLOPE_>0, ZERO, DRAWNULL),COLORGREEN,LINETHICK2;
DYN_SYS2:IF(DIF<0 AND SLOPE_<0, ZERO, DRAWNULL),COLORRED,LINETHICK2;

DRAWBAND(POINT_DIF_P,  RGB(0,255,0),ZERO,RGB(0,255,0));
DRAWBAND(POINT_DIFMA_P,RGB(0,255,0),ZERO,RGB(0,255,0));

DRAWBAND(POINT_DIF_M,  RGB(255,255,0),ZERO,RGB(255,255,0));
DRAWBAND(POINT_DIFMA_M,RGB(255,255,0),ZERO,RGB(255,255,0));


# FSL
SWL:(EMA(CLOSE,5)*7+EMA(CLOSE,10)*3)/10;
SWS:DMA(EMA(CLOSE,12),MAX(1,100*(SUM(VOL,5)/(3*CAPITAL))));

AD:= IF (SWL <= SWS, SWL, DRAWNULL);
DRAWBAND(AD,RGB(255,128,128),SWS,RGB(255,128,128));


# MCST
MCST:DMA(AMOUNT/(100*VOL),VOL/CAPITAL);


# RSI
N1:=6;
LC:=REF(CLOSE,1);
RSI1:SMA(MAX(CLOSE-LC,0),N1,1)/SMA(ABS(CLOSE-LC),N1,1)*100;
M:50,DOTLINE,COLORRED;
U:70,DOTLINE;
B:30,DOTLINE;

U_:= IF (RSI1 >= 70, RSI1, DRAWNULL);
DRAWBAND(U_,RGB(255,128,128),U,RGB(255,128,128));

B_:= IF (RSI1 <= 30, RSI1, DRAWNULL);
DRAWBAND(B_,RGB(0,128,64),B,RGB(0,128,64));


# SKDJ
N:=9;
M:=3;
LOWV:=LLV(LOW,N);
HIGHV:=HHV(HIGH,N);
RSV:=EMA((CLOSE-LOWV)/(HIGHV-LOWV)*100,M);
K:EMA(RSV,M);
D:MA(K,M);

MID:50,DOTLINE,COLORRED;
U:80,DOTLINE;
B:20,DOTLINE;

U_:= IF (K >= 80, K, DRAWNULL);
DRAWBAND(U_,RGB(255,128,128),U,RGB(255,128,128));

B_:= IF (K <= 20, K, DRAWNULL);
DRAWBAND(B_,RGB(0,128,64),B,RGB(0,128,64));


# CCI
N:=14;
TYP:=(HIGH+LOW+CLOSE)/3;
CCI:(TYP-MA(TYP,N))*1000/(15*AVEDEV(TYP,N));

ZERO:0,DOTLINE,COLORRED;
U:100,DOTLINE;
B:-100,DOTLINE;

U_:= IF (CCI >= 100, CCI, DRAWNULL);
DRAWBAND(U_,RGB(0,128,64),U,RGB(0,128,64));

B_:= IF (CCI <= -100, CCI, DRAWNULL);
DRAWBAND(B_,RGB(255,128,128),B,RGB(255,128,128));

BB:-220,DOTLINE;
BB_:= IF (CCI <= -220, CCI, DRAWNULL);
DRAWBAND(BB_,RGB(128,0,255),BB,RGB(128,0,255));

# RPS
ZY1: EMA(CLOSE/INDEXC*1000, 2);
EMA30: EMA(ZY1, 30);
RPS:= (ZY1 - EMA30), COLORSTICK;

E:= IF (ZY1 <= EMA30, EMA30, DRAWNULL);
DRAWBAND(ZY1,RGB(255,128,128),E,RGB(255,128,128));


# DMI
N:=14;
M:=6;
MTR:=SUM(MAX(MAX(HIGH-LOW,ABS(HIGH-REF(CLOSE,1))),ABS(REF(CLOSE,1)-LOW)),N);
HD :=HIGH-REF(HIGH,1);
LD :=REF(LOW,1)-LOW;
DMP:=SUM(IF(HD>0&&HD>LD,HD,0),N);
DMM:=SUM(IF(LD>0&&LD>HD,LD,0),N);
PDI: DMP*100/MTR;
MDI: DMM*100/MTR;
ADX: MA(ABS(MDI-PDI)/(MDI+PDI)*100,M);
ADXR:(ADX+REF(ADX,M))/2;

U:70,DOTLINE;
M_:50,DOTLINE;
B:5,DOTLINE;

ADX_SELL_:= IF (ADX >= 70 AND PDI > MDI, ADX, DRAWNULL);
DRAWBAND(ADX_SELL_,RGB(255,128,128),U,RGB(255,128,128));

PDI_SELL_:= IF (PDI >= 50 AND MDI <= 5, PDI, DRAWNULL);
MDI_SELL_:= IF (PDI >= 50 AND MDI <= 5, MDI, DRAWNULL);
DRAWBAND(PDI_SELL_,RGB(255,128,128),M_,RGB(255,128,128));
DRAWBAND(MDI_SELL_,RGB(255,128,128),B,RGB(255,128,128));


ADX_BUY_:= IF (ADX >= 70 AND PDI < MDI, ADX, DRAWNULL);
DRAWBAND(ADX_BUY_,RGB(0,128,64),U,RGB(0,128,64));

PDI_BUY_:= IF (MDI >= 50 AND PDI <= 5, PDI, DRAWNULL);
MDI_BUY_:= IF (MDI >= 50 AND PDI <= 5, MDI, DRAWNULL);
DRAWBAND(MDI_BUY_,RGB(0,128,64),M_,RGB(0,128,64));
DRAWBAND(PDI_BUY_,RGB(0,128,64),B,RGB(0,128,64));
